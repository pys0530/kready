---
- name: Setup system for Kubernetes
  hosts: all
  become: yes
  tasks:
    - name: Append local hosts file content to remote /etc/hosts # vi /etc/hosts
      blockinfile:
        path: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: "{{ lookup('file', 'hosts') }}"
        
    - name: Update all packages (equivalent to 'dnf update -y') # dnf update -y 
      ansible.builtin.dnf:
        name: '*'
        state: latest

    - name: Install net-tools and bash-completion packages # dnf install -y net-tools bash-completion
      ansible.builtin.dnf:
        name:
          - net-tools
          - bash-completion
        state: present

    - name: Disable and stop firewalld # systemctl disable --now firewalld
      ansible.builtin.service:
        name: firewalld
        state: stopped
        enabled: false

    - name: Turn off swap # swapoff -a
      ansible.builtin.command: swapoff -a
      args:
        warn: false

    - name: Comment out swap entries in /etc/fstab #  sed -i '/ swap / s/^/#/' /etc/fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '(^.*\s+swap\s+.*)'
        replace: '#\1'
        backup: yes


    - name: Create /etc/modules-load.d/k8s.conf for kernel modules 
    # cat <<EOF |tee /etc/modules-load.d/k8s.conf
    # overlay
    # br_netfilter
    # EOF
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
        owner: root
        group: root
        mode: '0644'

    - name: Load overlay module # modprobe overlay
      ansible.builtin.shell: modprobe overlay
      args:
        warn: false

    - name: Load br_netfilter module # modprobe br_netfilter
      ansible.builtin.shell: modprobe br_netfilter
      args:
        warn: false

    - name: Create /etc/sysctl.d/k8s.conf for sysctl settings
    # cat <<EOF |tee /etc/sysctl.d/k8s.conf
    # net.bridge.bridge-nf-call-iptables  = 1
    # net.bridge.bridge-nf-call-ip6tables = 1
    # net.ipv4.ip_forward                 = 1
    # EOF
      ansible.builtin.copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        owner: root
        group: root
        mode: '0644'

    - name: Apply sysctl settings # sysctl --system
      ansible.builtin.command: sysctl --system
